rem

в исходных данных надо закомментировать строчку 15

task 4

- нормальная система дает лучший результат на всех размерах, но пренебрижимо малый (1e8 при величине порядка 700-800)
- при увеличении данных ничего особо не меняется, средняя ошибка остается той же, градиентный спуск немного проигрывает.
- при увеличении данных заметно, что градиентный спуск начинает работать все дольше, на самых больших данных в несколько раз дольше нормальной системы

task 5

- нормальная система дает лучший результат, что согласуется с результатом симулированных данных и логикой (насколько я понимаю, нормальная система ищет лучшее решение согласно МНК, а градиентый спуск какое-то)
- да требутеся, так как иначе градиентный спуск расходится, так как веса растут очень быстро
- [-0.21926266  0.08583697  0.06425533  0.04577621 -0.10265302  0.82975928 -0.01115999 -0.19728797  0.10644466 -0.13439112 -0.13280161  0.19353247 -0.20794161] вернул нормальный алгоритм, как видно коэффициент при average number of rooms per dwelling самый большой, то есть этот признак влияет больше всего
- лучше подходит алгоритм с нормальной системой, он и дает результат чуть лучше, и работает медленно, и подыскивать какие-то коэффициенты не надо

task 6

- градиентный спуск работает быстрее при больших t. Также заметно, что как только мы начинаем использовать регуляризацию, значения функционалов резко сближаются (хотя градиентный спуск все еще хуже). Строгого уменьшения разности при увеличении t замечено не было.