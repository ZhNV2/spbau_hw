******************************** 6 марта ********************************

роли в scrum:
- scrum master
- product owner
- team

po общается с заказчиком, дальше на фоне его хотелок заполняет в backlog userstory
дальше на встрече с заказчиком всей команды и po они пытаются оценить userstory и отобрать какое-то их количество на спринт. Дальше на основе выбора формулируется цель спринта (лучше в smart).
по окончании спринта есть демо (где мы показываем его заказчику)

по середине scrum если требование изменилось, заказчик или po имеют право остановить спринт и устроить перепланирование, демо и ретроспективу. заказчик оплачивает расходы на этот кусочек.

story point - некоторая оценка того насколько тяжело выполнить userstory
scrum poker ?

================================== планирование ==================================
после каждого совещания есть поручения для каждого человека (что он должен сделать)
хочется сделать специальную программу которая будет разбирать почту руководителя и напоминать проверить что поручения исполняются и то же самое для исполнителей

что нужно сделать
1) crowler (собирает раз в день почту)
2) классификатор (чтобы отделять обычные от поручения)
3) парсинг (разбор письма)
4) AI box
5) Export

для плана-графика нужны еще сроки и люди
люди: Data Scinetist, Backend (x2), NLPS (natural language processing specialist)
сроки например: 2недели, 2недели, 5недель и т.д.

в план-графике должны быть:
- задачи
- ресурсы(люди)
- сроки

координация всех работ по проекту - например, договориться с теми другими коммандами от которых мы зависим (например, если мы внедряем нашу коробочку в существующую систему, то мы должны запланировать и действия с обратной стороны)

отчетность - например демо и беклог
люди не умеют оценивать!!
надо сидеть рядом с человеком и декомпозировать, если он не может сразу декомпозировать, то надо дать ему времени  разобраться с задачей!

задача менеджера - убедиться что человек понимает как решать эту задачу

******************************** 13 марта ********************************

Базовый план - план, который формируется на начальном этапе и фиксируется в начале. Считаем его некоторым эталоном.
Однозначность должна быть у менеджера и разработчика задачи

изменение любой задачи на критическом пути влечет увелечение срока проекта
каждая задача оценивается 3 вариантами - оптимистичной, пессимстичной и наиболее вероятно

per-диаграмма удобна чтобы посмотреть кртический путь
хорошо видны провисания задач - например тестировщик в начале спринта может быть незанят, а в конце наоборт сильно загужен


====================== Риски проекта ======================

риски бывают положительными и отрицательными
нарушение спецификаций - была какая-нибудь спецификая на создание архитектуры (например должна работать 1 секунду, а мы забили и сделали за 2, поэтому теперь проект не принят)

полная информация - как бы обычная задача (понятно что делать)
общая непределенность - надо что-то закладываться на риск

пока есть неопределенность - это риск
иначе - это просто последовательность задач


планирование реагирования на риски - и то, что делать, если реагировать и меры по предотвращению

качественная оценка - какие потери
количественная - солкьо он может нанести

Плана управления по PMBOK никто не придерживается - достаточно поддерживать табличку с рисками/вероятностясми/тяжестью последствий и т.п.

контроль - могу предсказать могу повлиять 
частично контролируемый - пример кгда босс просит у менеджера забрать сотрудника помочь другу (частично - потому что я могу уговорить босса а могу не уговорить)

передача, страхование - сразу обговорить, что например, в случае если интернет закроют, то все полностью на заказчике (то есть передаем ему риск)


