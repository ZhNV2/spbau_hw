тема: структуры управления в компаниях
вопрос: каким образом компании выстраивают свои управления (матричная, с двойным подчинением)

пример:
маленькая компания:
1 Генеральный директор(гд) / product owner(po) / бухгалетрия / юр. вопросы / аренда офиса
2 front
2 back
1 scrum master(sm)
1 test

Сделали проект, нашли еще 2 : надо масштабировать команду
относительно большие проекты, требования много

наняли такую же вторую команду и одного product owner на 2 проекта

пример организации подчинения: (-> подчинение)
po -> гд
sm1 -> po
sm2 -> po
команды -> sm1
команды -> sm2

теперь понадобился классный дизайнер, но нам нужен один на две команды
добавим дизайнер (ui) -> sm1, но начнется перетягивание каната, поэтому
добавим лучше ui -> po

теперь нужен еще один devops (для CD/CI), опять на две команды
предположим что тоже devops -> po

предположим, что оба проекта должны быть высоконагруженным, и оба test не умеют, поэтому решили взять еще одного high load tester

есть идея подвесить теперь двух тестировщиков к high load, чтобы разгрузить sm1, sm2
но при этом po становится более нагруженным

теперь попробуем high load -> devops -> po

если появляется третий проект, то куча проблем

начинаем заново

1) есть гд, который занимается продажей/обеспечением жизнедеятельности в офисе
2) 4 front
3) 4 back
4) 2 test
5) 1 ui
6) 1 high load
7) 1 devops
8) 2 sm
9) 1 po
10) есть 3 проекта

матричная структура с двойным подчинением
	po     front     back     test     devops     ui
1   0,33   1         1        0,5+hl   
2   0,33   1         1        0,5+hl
3   0,33   1         1        1    

2 sm подчиняются po
есть еще главный front, главный back, главный test, которые общаются с обоими sm

по вертикали мы предполагаем, что люди будут повышать качество своего отдела с функциональным подчинением, главные по вертикали могут ничего не понимать о бюджете проекта, 

а по горизонтали ему важно что есть люди которые помогут выполнить задачи по проекту

добавим еще  директор по производству, который должен обеспечить бесперебойную работу производственной части, то есть он непосредственно руководит главными по front, back, test, devops и ui, директор по производству непосредственно подчиняется гд

po все еще непосредственно подчиняется гд

если появляется четвертый проект (который начнется потом), его потенциально возьмет sm1, он должен определить ресурсы на проект, он говорит с главными и спрашивет, могут ли они выделить такие ресурсы

главные по вертикалям отвечают за то чтобы хватало ресурсах в прилетающих проектах, чтобы люди внутри были компетентры, валифицированны, отвечает за их развитие, придумывает им возможности роста, думает над их обучением, занимается поиском и наймом новых членов

двойное подчинение потому что у сотрудника сразу два начальника - фнукциональный и проектный

маленькие короткие проекты - вертикальный распределяет сотрудников по проектам
если мы заинтересованы в том чтобы команда более или менее оставалась такой же (например, проекты такие же), то подбор команды более или менее отходит sm-ам, а главные по вертикали отвечают за компентности по своим областям, потому что sm не шарит в back, front и т.п


теперь переходим от проектного бизнеса к продуктовому
теперь появляется роль product manager, который 1) должен понимать кто и как  будет продавать аудиторию, 


структура abbyy:
директор продуктового департамента по прил 1 -> гд
директор продуктового департамента по прил 2 -> гд
директор продуктового департамента по прил 3 -> гд
тех дир 3 -> dpd 3
главный маркетолог -> dpd 3

также есть главный по back, front и т.п но они объединяют вертикали сразу всех проектов




